20.1 定义注解
    定义注解时会需药一些元注解，如@Target和@Retention。@Target用来定义你的注解将应用于什么地方（例如一个方法或者一个域）。
   @Retention用来定义注解在哪一个级别可用，在源代码中（SOURCE），类文件中(CLASS)，或者运行时(RUNTIME)。
    在注解中。一般会包含一些元素以表示某些值。  没有元素的注解称为标记注解。
20.1.2 元注解
    java内置三大注解（@Override、@Deprecated、 @SuppressWarnings），以及元注解。元注解专门负责注解其他注解。
    除了@Target、@Retention，还有：@Documented 将此注解包含在java doc中。@Inherited允许子类继承父类中的注解。
    大多数时候，程序员主要是编写自己的注解，并编写自己的处理器来处理他们。
20.2编写注解处理器
    两个反射方法：getDeclaredMethods()/getAnnotation(UseCase.class),getAnnotation返回指定类型的注解对象。
20.2.1 注解元素
    注解元素可用的类型如下所示：
        * 所有基本类型（int ,float,boolean等）
        * String
        * Class
        * enum
        * Annotation
        * 以上类型的数组
    如果你使用了其他类型，编译器就会报错。也不允许使用任何包装类型， 注解可以嵌套。
20.2.2 默认值限制
    首先，元素不能有不确定值，也就是说，元素必须有默认值，或者在使用注解时提供元素的值。
    其次，对于非基本类型的元素，无论是在源代码中声明时，或者是在接口注解中定义默认值，都不能以null作为其值。
   为了绕开这个约束，我们只能定义一些特殊值，例如空串或者负数，以表示某个元素不存在。
20.2.4 注解不支持继承



